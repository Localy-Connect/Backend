variables:
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true
    -X  # FÃ¼ge den Debug-Parameter hinzu
  CI_REGISTRY: git-registry.gibb.ch/nzy134323/localy
  CI_REGISTRY_USER: ibi135182
  CI_REGISTRY_PASSWORD: glpat-EY2iEzbmsoeNM4g7aNKP

image: maven:3-openjdk-17

cache:
  paths:
    - .m2/repository

stages:
  - build
  - test
  - package
  - deploy
  - docker-build
  - docker-push

build:
  stage: build
  script:
    - mvn clean install
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week

test:
  stage: test
  script:
    - mvn test
  artifacts:
    paths:
      - target/surefire-reports/
    expire_in: 1 week

package:
  stage: package
  script:
    - mvn package
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week

deploy:
  stage: deploy
  script:
    - echo "Deploying to GitLab Maven repository..."
    - mvn deploy --settings ci_settings.xml -DskipTests
  only:
    - main
    - /^release\/.*$/
  dependencies:
    - package

docker-build:
  image: docker:20.10.16
  stage: docker-build
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}-frontend:$CI_COMMIT_REF_SLUG -f docker/frontend.Dockerfile .
    - docker tag ${CI_REGISTRY_IMAGE}-frontend:$CI_COMMIT_REF_SLUG $CI_REGISTRY_IMAGE:latest
  artifacts:
    paths:
      - docker/frontend.Dockerfile

docker-push:
  image: docker:20.10.16
  stage: docker-push
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker push ${CI_REGISTRY_IMAGE}-frontend:$CI_COMMIT_REF_SLUG
    - docker push ${CI_REGISTRY_IMAGE}-frontend:latest
